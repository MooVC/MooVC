//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MooVC.Linq {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class EnumerableExtensions_Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal EnumerableExtensions_Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MooVC.Linq.EnumerableExtensions.Resources", typeof(EnumerableExtensions_Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The action to be performed must be provided..
        /// </summary>
        internal static string ForActionRequired {
            get {
                return ResourceManager.GetString("ForActionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The action to be performed in parallel must be provided..
        /// </summary>
        internal static string ForAllActionRequired {
            get {
                return ResourceManager.GetString("ForAllActionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation to be performed in parallel must be provided..
        /// </summary>
        internal static string ForAllAsyncOperationRequired {
            get {
                return ResourceManager.GetString("ForAllAsyncOperationRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The predicate to be applied must be provided..
        /// </summary>
        internal static string HasAnyPredicateRequired {
            get {
                return ResourceManager.GetString("HasAnyPredicateRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The predicate to be applied when searching for the index of the first occurance within the enumeration must be provided..
        /// </summary>
        internal static string IndexOfPredicateRequired {
            get {
                return ResourceManager.GetString("IndexOfPredicateRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source enumerable must be provided..
        /// </summary>
        internal static string IsEmptySourceRequired {
            get {
                return ResourceManager.GetString("IsEmptySourceRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transform to be applied in parallel to each element within the enumeration must be provided..
        /// </summary>
        internal static string ProcessAllTransformRequired {
            get {
                return ResourceManager.GetString("ProcessAllTransformRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transform to be applied to each element within the enumeration must be provided..
        /// </summary>
        internal static string ProcessTransformRequired {
            get {
                return ResourceManager.GetString("ProcessTransformRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selector to be applied when ordering the elements within the snapshot must be provided..
        /// </summary>
        internal static string ToArrayOrEmptyOrderRequired {
            get {
                return ResourceManager.GetString("ToArrayOrEmptyOrderRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value selector must be provided..
        /// </summary>
        internal static string ToIndexSelectorRequired {
            get {
                return ResourceManager.GetString("ToIndexSelectorRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value transform must be provided..
        /// </summary>
        internal static string ToIndexTransformRequired {
            get {
                return ResourceManager.GetString("ToIndexTransformRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The condition that determines whether or not the predicate is to be applied must be provided..
        /// </summary>
        internal static string WhereIfConditionRequired {
            get {
                return ResourceManager.GetString("WhereIfConditionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The predicate to be applied to the enumeration when applicable must be provided..
        /// </summary>
        internal static string WhereIfPredicateRequired {
            get {
                return ResourceManager.GetString("WhereIfPredicateRequired", resourceCulture);
            }
        }
    }
}
